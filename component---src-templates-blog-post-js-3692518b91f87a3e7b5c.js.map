{"version":3,"file":"component---src-templates-blog-post-js-3692518b91f87a3e7b5c.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/comments.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n  const githubUsername = social?.github\n\n  return (\n    <div className=\"bio\">\n      {githubUsername && (\n        <img\n          className=\"bio-avatar\"\n          src={`https://github.com/${githubUsername}.png?size=50`}\n          width={50}\n          height={50}\n          alt=\"GitHub profile\"\n        />\n      )}\n      {author?.name && (\n        <p>\n          Written by {author.name}{author?.summary ? `, ${author.summary}` : null}\n          <br/>\n          {githubUsername && (\n            <>GitHub: <a href={`https://github.com/${githubUsername}`}>{githubUsername}</a></>\n          )}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react'\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: 'pending' }\n  }\n\n  componentDidMount() {\n    const scriptEl = document.createElement('script')\n    scriptEl.onload = () => this.setState({ status: 'success' })\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\n    scriptEl.async = true\n\n    scriptEl.src = 'https://giscus.app/client.js'\n    scriptEl.setAttribute('data-repo', 'jihoon-ernesto/jihoon-ernesto.github.io')\n    scriptEl.setAttribute('data-repo-id', \"R_kgDOHJWllw\")\n    scriptEl.setAttribute('data-category', \"Announcements\")\n    scriptEl.setAttribute('data-category-id', \"DIC_kwDOHJWll84CPG4E\")\n    scriptEl.setAttribute('data-mapping', \"pathname\")\n    scriptEl.setAttribute('data-reactions-enabled', \"1\")\n    scriptEl.setAttribute('data-emit-metadata', \"0\")\n    scriptEl.setAttribute('data-input-position', \"bottom\")\n    scriptEl.setAttribute('data-theme', 'light')\n    scriptEl.setAttribute('data-lang', 'en')\n    scriptEl.setAttribute('data-loading', 'lazy')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === 'failed' && <div>Error. Please try again.</div>}\n        {status === 'pending' && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Comments\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Comments from \"../components/comments\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <Comments />\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","githubUsername","github","React","className","src","width","height","alt","name","summary","href","_React$Component","Comments","props","_this","call","commentsEl","state","status","_inheritsLoose","_proto","prototype","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","setAttribute","current","appendChild","render","ref","_ref","location","post","markdownRemark","siteTitle","title","previous","next","Layout","Seo","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}