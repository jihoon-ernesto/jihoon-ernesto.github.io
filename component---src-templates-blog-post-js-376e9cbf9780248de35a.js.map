{"version":3,"file":"component---src-templates-blog-post-js-376e9cbf9780248de35a.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/comments.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          GitHub: <a href={`https://github.com/${social?.github || ``}`}>{social?.github}</a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react'\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: 'pending' }\n  }\n\n  componentDidMount() {\n    const scriptEl = document.createElement('script')\n    scriptEl.onload = () => this.setState({ status: 'success' })\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\n    scriptEl.async = true\n\n    scriptEl.src = 'https://giscus.app/client.js'\n    scriptEl.setAttribute('data-repo', 'jihoon-ernesto/jihoon-ernesto.github.io')\n    scriptEl.setAttribute('data-repo-id', \"R_kgDOHJWllw\")\n    scriptEl.setAttribute('data-category', \"Announcements\")\n    scriptEl.setAttribute('data-category-id', \"DIC_kwDOHJWll84CPG4E\")\n    scriptEl.setAttribute('data-mapping', \"pathname\")\n    scriptEl.setAttribute('data-reactions-enabled', \"1\")\n    scriptEl.setAttribute('data-emit-metadata', \"0\")\n    scriptEl.setAttribute('data-input-position', \"bottom\")\n    scriptEl.setAttribute('data-theme', 'light')\n    scriptEl.setAttribute('data-lang', 'en')\n    scriptEl.setAttribute('data-loading', 'lazy')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === 'failed' && <div>Error. Please try again.</div>}\n        {status === 'pending' && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Comments\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Comments from \"../components/comments\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <Comments />\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","github","Comments","props","commentsEl","React","state","status","componentDidMount","scriptEl","document","createElement","onload","setState","onerror","async","setAttribute","this","current","appendChild","render","ref","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}