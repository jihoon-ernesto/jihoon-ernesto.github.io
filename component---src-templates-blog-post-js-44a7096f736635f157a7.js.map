{"version":3,"file":"component---src-templates-blog-post-js-44a7096f736635f157a7.js","mappings":"4OA8CA,MA5Cc,SAAAA,GACZ,SAAAC,EAAYC,GAAQ,IAADC,EAIiB,OAHlCA,EAAAH,EAAAI,KAAA,KAAMF,IAAM,MAEPG,WAAaC,EAAAA,YAClBH,EAAKI,MAAQ,CAAEC,OAAQ,WAAWL,CACpC,EANYM,EAAAA,EAAAA,GAAAR,EAAAD,GAMX,IAAAU,EAAAT,EAAAU,UAmCA,OAnCAD,EAEDE,kBAAA,WACE,MAAMC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAS,IAAMC,KAAKC,SAAS,CAAEV,OAAQ,YAChDK,EAASM,QAAU,IAAMF,KAAKC,SAAS,CAAEV,OAAQ,WACjDK,EAASO,OAAQ,EAEjBP,EAASQ,IAAM,+BACfR,EAASS,aAAa,YAAa,2CACnCT,EAASS,aAAa,eAAgB,gBACtCT,EAASS,aAAa,gBAAiB,iBACvCT,EAASS,aAAa,mBAAoB,wBAC1CT,EAASS,aAAa,eAAgB,YACtCT,EAASS,aAAa,yBAA0B,KAChDT,EAASS,aAAa,qBAAsB,KAC5CT,EAASS,aAAa,sBAAuB,UAC7CT,EAASS,aAAa,aAAc,SACpCT,EAASS,aAAa,YAAa,MACnCT,EAASS,aAAa,eAAgB,QACtCT,EAASS,aAAa,cAAe,aAErCL,KAAKZ,WAAWkB,QAAQC,YAAYX,EACtC,EAACH,EAEDe,OAAA,WACE,MAAM,OAAEjB,GAAWS,KAAKV,MAExB,OACED,EAAAA,cAAA,OAAKoB,UAAU,oBACD,WAAXlB,GAAuBF,EAAAA,cAAA,WAAK,4BACjB,YAAXE,GAAwBF,EAAAA,cAAA,WAAK,qBAC9BA,EAAAA,cAAA,OAAKqB,IAAKV,KAAKZ,aAGrB,EAACJ,CAAA,CAzCW,CAASK,EAAAA,WCkEvB,MA5DyBsB,IAAyB,IAADC,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUH,EAC1C,MAAMI,EAAOF,EAAKG,eACZC,GAAkC,QAAtBL,EAAAC,EAAKK,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBQ,QAAK,SACzC,SAAEC,EAAQ,KAAEC,GAAST,EAE3B,OACExB,EAAAA,cAACkC,EAAAA,EAAM,CAACT,SAAUA,EAAUM,MAAOH,GACjC5B,EAAAA,cAACmC,EAAAA,EAAG,CACFJ,MAAOL,EAAKU,YAAYL,MACxBM,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpDtC,EAAAA,cAAA,WACEoB,UAAU,YACVmB,WAAS,EACTC,SAAS,6BAETxC,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIyC,SAAS,YAAYf,EAAKU,YAAYL,OAC1C/B,EAAAA,cAAA,SAAI0B,EAAKU,YAAYM,OAEvB1C,EAAAA,cAAA,WACE2C,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCJ,SAAS,gBAEXzC,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAAC8C,EAAAA,EAAG,QAGR9C,EAAAA,cAACL,EAAQ,MACTK,EAAAA,cAAA,OAAKoB,UAAU,iBACbpB,EAAAA,cAAA,MACE+C,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGXpD,EAAAA,cAAA,UACGgC,GACChC,EAAAA,cAACqD,EAAAA,KAAI,CAACC,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAAO,KACtCzB,EAASI,YAAYL,QAI9B/B,EAAAA,cAAA,UACGiC,GACCjC,EAAAA,cAACqD,EAAAA,KAAI,CAACC,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKG,YAAYL,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/components/comments.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import React from 'react'\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: 'pending' }\n  }\n\n  componentDidMount() {\n    const scriptEl = document.createElement('script')\n    scriptEl.onload = () => this.setState({ status: 'success' })\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\n    scriptEl.async = true\n\n    scriptEl.src = 'https://giscus.app/client.js'\n    scriptEl.setAttribute('data-repo', 'jihoon-ernesto/jihoon-ernesto.github.io')\n    scriptEl.setAttribute('data-repo-id', \"R_kgDOHJWllw\")\n    scriptEl.setAttribute('data-category', \"Announcements\")\n    scriptEl.setAttribute('data-category-id', \"DIC_kwDOHJWll84CPG4E\")\n    scriptEl.setAttribute('data-mapping', \"pathname\")\n    scriptEl.setAttribute('data-reactions-enabled', \"1\")\n    scriptEl.setAttribute('data-emit-metadata', \"0\")\n    scriptEl.setAttribute('data-input-position', \"bottom\")\n    scriptEl.setAttribute('data-theme', 'light')\n    scriptEl.setAttribute('data-lang', 'en')\n    scriptEl.setAttribute('data-loading', 'lazy')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === 'failed' && <div>Error. Please try again.</div>}\n        {status === 'pending' && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Comments\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Comments from \"../components/comments\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <Comments />\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["_React$Component","Comments","props","_this","call","commentsEl","React","state","status","_inheritsLoose","_proto","prototype","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","src","setAttribute","current","appendChild","render","className","ref","_ref","_data$site$siteMetada","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","Layout","Seo","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}